<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Infra on Ding&#39;s Coding Forge</title>
    <link>https://dingyu.dev/categories/infra/</link>
    <description>Recent content in Infra on Ding&#39;s Coding Forge</description>
    <image>
      <title>Ding&#39;s Coding Forge</title>
      <url>https://dingyu.dev/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://dingyu.dev/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.144.0</generator>
    <language>ko</language>
    <lastBuildDate>Fri, 16 Aug 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://dingyu.dev/categories/infra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Infra] 쿠버네틱스 무중단 배포 설정하기</title>
      <link>https://dingyu.dev/posts/k8s-zero-downtime/</link>
      <pubDate>Fri, 16 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://dingyu.dev/posts/k8s-zero-downtime/</guid>
      <description>During our migration from IDC to EKS, we encountered numerous challenges—including security configurations, network settings, databases, and ultimately, application deployments. After each deployment, we frequently faced 502 and 504 errors without a clear solution. Since minimizing downtime was critical, I’ll share how we overcame these 502 and 504 issues.</description>
    </item>
    <item>
      <title>[Infra] AWS Well Architected</title>
      <link>https://dingyu.dev/posts/aws-well-architected/</link>
      <pubDate>Tue, 19 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://dingyu.dev/posts/aws-well-architected/</guid>
      <description>This post explores AWS Well-Architected Best Practices, covering key aspects such as operational excellence, security, reliability, performance efficiency, cost optimization, and sustainability. It provides insights into scalability strategies (scale-up vs. scale-out), infrastructure as code (IaC), database replication, and high availability architectures. Additionally, it discusses security best practices, monitoring strategies, and cost management techniques to build a resilient, efficient, and cost-effective AWS infrastructure.</description>
    </item>
  </channel>
</rss>
